{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/embeddable.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;AClFA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,wHAAwH;AACjJ;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,mBAAmB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH","file":"embeddable.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 402);\n","/*global Lab, $, _gaq, Embeddable: true, AUTHORING: true */\n/*jshint boss:true */\n\n// Strawman setting for telling the interactive to be in \"author mode\",\n// allowing things like positioning textBoxes by hand.\nAUTHORING = false;\n\nEmbeddable = window.Embeddable || {};\nEmbeddable.sendGAPageview = function (){\n    // send the pageview to GA\n    if (typeof _gaq === 'undefined'){\n      return;\n    }\n    // make an array out of the URL's hashtag string, splitting the string at every ampersand\n    var my_hashtag_array = location.hash.split('&');\n\n    // grab the first value of the array (assuming that's the value that indicates which interactive is being viewed)\n    var my_hashtag = my_hashtag_array[0];\n    _gaq.push(['_trackPageview', location.pathname + my_hashtag]);\n};\n\nEmbeddable.load = function(interactiveUrl, containerSelector, callbacks) {\n  // Fix mouse dragging when the mouse goes into an iframe child, or leaves the iframe we're in\n  (function() {\n    var blocker = null,\n        protectAllIframes = function() {\n          $('iframe').each(function() {\n            var iframe = $(this),\n                offset = iframe.offset();\n            blocker = $('<div class=\"drag-blocker\"></div>');\n            blocker.css({position: 'absolute', top: offset.top, left: offset.left, width: iframe.width(), height: iframe.height(), zIndex: 1000 });\n            $(document.body).append(blocker);\n          });\n        },\n        mouseMove = function() {\n          $(window).off(\"mousemove\", mouseMove);\n          $('.drag-blocker').remove();\n          protectAllIframes();\n        },\n        mouseLeave = function() {\n          // If we don't trigger immediately, it's possible that the user could release\n          // the mouse outside of our frame and return back into our frame within our timeout\n          // period, and we'd miss the mouseup and have the same old problem we're trying\n          // to fix.\n\n          var stillGone = true,\n              cameBack = function() { stillGone = false; };\n          setTimeout(function() {\n            $('#interactive-container').off('mousemove', cameBack);\n            // Trigger if the mouse never came back (we'll assume we're still dragging)\n            if (stillGone) {\n              $(document).trigger('mouseup');\n            }\n          }, 500);\n          $('#interactive-container').on('mousemove', cameBack);\n        },\n        mouseDown = function() {\n          $('#interactive-container').on('mousemove', mouseMove);\n          $('#interactive-container').on('mouseleave', mouseLeave);\n        },\n        mouseUp = function() {\n          $('#interactive-container').off(\"mousemove\", mouseMove);\n          $('#interactive-container').off(\"mouseleave\", mouseLeave);\n          $('.drag-blocker').remove();\n        };\n\n    $(document).on('mousedown', mouseDown).on('mouseup', mouseUp);\n  })();\n\n  callbacks = callbacks || {};\n\n  function loadLabInteractive(interactiveJSON) {\n    Embeddable.controller = new Lab.InteractivesController(interactiveJSON, containerSelector);\n    if (callbacks.controllerReady) callbacks.controllerReady(Embeddable.controller);\n  }\n\n  if (interactiveUrl == null) {\n    // Load empty interactive that waits for Interactive JSON that can be provided by parent\n    // page using iframe-phone.\n    loadLabInteractive(null);\n    return;\n  }\n\n  $.get(interactiveUrl).done(function(results) {\n    if (typeof results === 'string') results = JSON.parse(results);\n\n    if (results.redirect) {\n      if (callbacks.redirect) {\n        callbacks.redirect(results.redirect);\n        return;\n      } else {\n        throw new Error(\"Redirecting interactive loaded without a redirect handler\");\n      }\n    }\n    loadLabInteractive(results);\n  })\n  .fail(function() {\n    document.title = \"Interactive not found\";\n    $(containerSelector).load(\"interactives/not-found.html\", function(){\n      $('#interactive-link').text(interactiveUrl).attr('href', interactiveUrl);\n    });\n    if(callbacks.notFound) callbacks.notFound();\n  });\n};\n"],"sourceRoot":""}